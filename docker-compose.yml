version: '3'
services:
  zookeeper:
    image: eventuateio/eventuate-zookeeper:0.4.0.RELEASE
    ports:
      - 2181:2181
  kafka:
    image: eventuateio/eventuate-kafka:0.3.0.RELEASE
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      - ADVERTISED_HOST_NAME=${DOCKER_HOST_IP?DOCKER_HOST_IP must be set}
      - KAFKA_HEAP_OPTS=-Xmx192m -Xms192m
      - ZOOKEEPER_SERVERS=zookeeper:2181
  mysql:
    build: ./mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
  cdc-service:
    image: eventuateio/eventuate-cdc-service:0.4.0.RELEASE
    ports:
      - "8099:8080"
    depends_on:
      - mysql
      - kafka
    environment:
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      EVENTUATE_CDC_PIPELINE_PIPELINE1_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE1_READER: reader1
      EVENTUATE_CDC_PIPELINE_PIPELINE1_EVENTUATEDATABASESCHEMA: ftgo_consumer_service

      EVENTUATE_CDC_PIPELINE_PIPELINE2_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE2_READER: reader1
      EVENTUATE_CDC_PIPELINE_PIPELINE2_EVENTUATEDATABASESCHEMA: ftgo_order_service

      EVENTUATE_CDC_PIPELINE_PIPELINE3_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE3_READER: reader1
      EVENTUATE_CDC_PIPELINE_PIPELINE3_EVENTUATEDATABASESCHEMA: ftgo_kitchen_service

      EVENTUATE_CDC_PIPELINE_PIPELINE4_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE4_READER: reader1
      EVENTUATE_CDC_PIPELINE_PIPELINE4_EVENTUATEDATABASESCHEMA: ftgo_restaurant_service

      EVENTUATE_CDC_PIPELINE_PIPELINE5_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE5_READER: reader1
      EVENTUATE_CDC_PIPELINE_PIPELINE5_EVENTUATEDATABASESCHEMA: ftgo_accounting_service

      EVENTUATE_CDC_PIPELINE_PIPELINE6_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE6_READER: reader1
      EVENTUATE_CDC_PIPELINE_PIPELINE6_EVENTUATEDATABASESCHEMA: ftgoorderhistoryservice

      EVENTUATE_CDC_PIPELINE_PIPELINE7_TYPE: eventuate-local
      EVENTUATE_CDC_PIPELINE_PIPELINE7_READER: reader1
      EVENTUATE_CDC_PIPELINE_PIPELINE7_EVENTUATEDATABASESCHEMA: ftgo_accounting_service

      EVENTUATE_CDC_READER_READER1_TYPE: mysql-binlog
      EVENTUATE_CDC_READER_READER1_DATASOURCEURL: jdbc:mysql://mysql:3306/eventuate
      EVENTUATE_CDC_READER_READER1_DATASOURCEUSERNAME: root
      EVENTUATE_CDC_READER_READER1_DATASOURCEPASSWORD: rootpassword
      EVENTUATE_CDC_READER_READER1_DATASOURCEDRIVERCLASSNAME: com.mysql.jdbc.Driver
      EVENTUATE_CDC_READER_READER1_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/common
      EVENTUATE_CDC_READER_READER1_CDCDBUSERNAME: root
      EVENTUATE_CDC_READER_READER1_CDCDBPASSWORD: rootpassword
      EVENTUATE_CDC_READER_READER1_READOLDDEBEZIUMDBOFFSETSTORAGETOPIC: "false"
      EVENTUATE_CDC_READER_READER1_MYSQLBINLOGCLIENTUNIQUEID: 1
      EVENTUATE_CDC_READER_READER1_OFFSETSTOREKEY: MySqlBinlog
      EVENTUATE_CDC_READER_READER1_OFFSETSTORAGETOPICNAME: db.history.common

  ftgo-consumer-service:
    build: ./ftgo-consumer-service
    ports:
      - "8081:8080"
    depends_on:
      - mysql
      - kafka
      - cdc-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql/ftgo_consumer_service
      SPRING_DATASOURCE_USERNAME: ftgo_consumer_service_user
      SPRING_DATASOURCE_PASSWORD: ftgo_consumer_service_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.jdbc.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      EVENTUATE_DATABASE_SCHEMA: ftgo_consumer_service
      JAVA_OPTS: -Xmx192m
  ftgo-order-service:
    build: ./ftgo-order-service
    ports:
      - "8082:8080"
    depends_on:
      - mysql
      - kafka
      - cdc-service
      - zipkin
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql/ftgo_order_service
      SPRING_DATASOURCE_USERNAME: ftgo_order_service_user
      SPRING_DATASOURCE_PASSWORD: ftgo_order_service_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.jdbc.Driver
      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
      JAVA_OPTS: -Xmx192m
      SPRING_SLEUTH_ENABLED: "true"
      SPRING_SLEUTH_SAMPLER_PROBABILITY: 1
      SPRING_ZIPKIN_BASE_URL: http://zipkin:9411/
      EVENTUATE_DATABASE_SCHEMA: ftgo_order_service
  ftgo-kitchen-service:
      build: ./ftgo-kitchen-service
      ports:
        - "8083:8080"
      depends_on:
        - mysql
        - kafka
        - zookeeper
        - cdc-service
      environment:
        SPRING_DATASOURCE_URL: jdbc:mysql://mysql/ftgo_kitchen_service
        SPRING_DATASOURCE_USERNAME: ftgo_kitchen_service_user
        SPRING_DATASOURCE_PASSWORD: ftgo_kitchen_service_password
        SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.jdbc.Driver
        EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
        EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
        JAVA_OPTS: -Xmx192m
        EVENTUATE_DATABASE_SCHEMA: ftgo_kitchen_service
  ftgo-restaurant-service:
      build: ./ftgo-restaurant-service
      ports:
        - "8084:8080"
      depends_on:
        - mysql
        - kafka
        - zookeeper
        - cdc-service
      environment:
        SPRING_DATASOURCE_URL: jdbc:mysql://mysql/ftgo_restaurant_service
        SPRING_DATASOURCE_USERNAME: ftgo_restaurant_service_user
        SPRING_DATASOURCE_PASSWORD: ftgo_restaurant_service_password
        SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.jdbc.Driver
        EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
        EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
        JAVA_OPTS: -Xmx192m
        EVENTUATE_DATABASE_SCHEMA: ftgo_restaurant_service
  ftgo-accounting-service:
        build: ./ftgo-accounting-service
        ports:
          - "8085:8080"
        depends_on:
          - mysql
          - kafka
          - zookeeper
          - cdc-service
        environment:
          SPRING_DATASOURCE_URL: jdbc:mysql://mysql/ftgo_accounting_service
          SPRING_DATASOURCE_USERNAME: ftgo_accounting_service_user
          SPRING_DATASOURCE_PASSWORD: ftgo_accounting_service_password
          SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.jdbc.Driver
          EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
          EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
          JAVA_OPTS: -Xmx192m
          EVENTUATE_DATABASE_SCHEMA: ftgo_accounting_service
  ftgo-order-history-service:
        build: ./ftgo-order-history-service
        ports:
          - "8086:8080"
        depends_on:
          - kafka
          - zookeeper
          - cdc-service
          - dynamodblocal
          - dynamodblocal-init
        environment:
          EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
          EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181
          AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-id_key}
          AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-access_key}
          AWS_DYNAMODB_ENDPOINT_URL: http://dynamodblocal:8000
          AWS_REGION: ${AWS_REGION:-us-west-2}
          JAVA_OPTS: -Xmx192m
  ftgo-api-gateway:
    build: ./ftgo-api-gateway
    ports:
      - "8087:8080"
    environment:
      ORDER_DESTINATIONS_ORDERSERVICEURL: http://ftgo-order-service:8080
      ORDER_DESTINATIONS_ORDERHISTORYSERVICEURL: http://ftgo-order-history-service:8080
      CONSUMER_DESTINATIONS_CONSUMERSERVICEURL: http://ftgo-consumer-service:8080
      JAVA_OPTS: -Xmx192m
      SPRING_SLEUTH_ENABLED: "true"
      SPRING_SLEUTH_SAMPLER_PROBABILITY: 1
      SPRING_ZIPKIN_BASE_URL: http://zipkin:9411/

  ftgo-api-gateway-graphql:
    build: ./ftgo-api-gateway-graphql
    ports:
      - "8088:3000"
    environment:
      ORDER_HISTORY_SERVICE_URL: http://ftgo-order-history-service:8080
      CONSUMER_SERVICE_URL: http://ftgo-consumer-service:8080
      RESTAURANT_SERVICE_URL: http://ftgo-restaurant-service:8080

  zipkin:
      image: openzipkin/zipkin:2.5.0
      ports:
       - "9411:9411"
      environment:
        JAVA_OPTS: -Xmx128m

  # dynamodblocal_old:
  #   build: ./dynamodblocal
  #   ports:
  #    - "8000:8000"
  #   environment:
  #     JAVA_OPTS: -Xmx128m

  dynamodblocal:
    command: "-jar DynamoDBLocal.jar -sharedDb -optimizeDbBeforeStartup -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodblocal
    ports:
      - "8000:8000"
    # environment:
    #   JAVA_OPTS: -Xmx128m
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal

  dynamodblocal-init:
    build: ./dynamodblocal-init
    depends_on:
      - dynamodblocal
    restart: on-failure
    environment:
      AWS_DYNAMODB_ENDPOINT_URL: http://dynamodblocal:8000
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-id_key}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-access_key}
      AWS_REGION: ${AWS_REGION:-us-west-2}
